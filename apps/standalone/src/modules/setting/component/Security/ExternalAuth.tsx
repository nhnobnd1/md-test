import { Input, Space, Typography } from "antd";
import { memo, useCallback, useEffect, useState } from "react";
interface ExternalAuth {
  initialValues?: {
    twoFactorEnabled: boolean;
    twoFactorMethod: string;
  };
  props: {
    method: string;
    key: string;
  };
  setDataSubmitExternalAuth: (value: any) => void;
  errorMessage?: string;
}
const ExternalAuth = ({
  initialValues,
  props,
  setDataSubmitExternalAuth,
  errorMessage,
}: ExternalAuth) => {
  const [value, setValue] = useState("");
  const handleChange = useCallback((e) => {
    setValue(e.target.value);
  }, []);
  useEffect(() => {
    setDataSubmitExternalAuth && setDataSubmitExternalAuth(value);
  }, [value]);
  useEffect(() => {}, [initialValues]);
  return (
    <Space direction="vertical" size="middle" className="mt-6">
      <Typography.Text>
        1. Download and install any authenticator application in your mobile
        device (Google Authenticator, 2FAs, Duo Mobile,...etc)
      </Typography.Text>
      <div>
        <Typography.Text>
          2. Open your authenticator and scan this QR code.
        </Typography.Text>
        <div className="p-4">
          <img
            width={220}
            height={220}
            src={`data:image/png;base64,${props.key}`}
          />
        </div>
      </div>
      <div>
        <Typography.Text>
          3. Enter the OTP generated by the authenticator application.
        </Typography.Text>
        <div className="flex items-center">
          <div className="w-24 m-4">
            <Input
              value={value}
              onChange={handleChange}
              type="text"
              autoComplete="off"
              maxLength={6}
            />
          </div>
          {errorMessage ? (
            <div className="Polaris-Labelled__Error">
              <Typography.Text>Wrong code. Try again.</Typography.Text>
            </div>
          ) : null}
        </div>
      </div>
    </Space>
  );
};
export default memo(ExternalAuth);
