import { Space, Typography } from "antd";
import { memo, useCallback, useEffect, useState } from "react";
import { Form } from "src/components/UI/Form";
import InputOTP from "src/modules/setting/component/Security/InputOTP";
interface ExternalAuth {
  initialValues?: {
    twoFactorEnabled: boolean;
    twoFactorMethod: string;
  };
  props: {
    method: string;
    key: string;
  };
  setDataSubmitExternalAuth: (value: any) => void;
  errorMessage?: string;
  setErrorMessage: (value: string | undefined) => void;
}
const ExternalAuth = ({
  initialValues,
  props,
  setDataSubmitExternalAuth,
  errorMessage,
  setErrorMessage,
}: ExternalAuth) => {
  const [value, setValue] = useState("");
  const handleChange = useCallback((value: string) => {
    setValue(value);
  }, []);
  const handleChangeValueForm = useCallback((value: { code: string }) => {
    handleChange(value.code);
  }, []);
  useEffect(() => {
    setDataSubmitExternalAuth && setDataSubmitExternalAuth(value);
  }, [value]);
  useEffect(() => {}, [initialValues]);
  return (
    <Form initialValues={{ code: "" }} onValuesChange={handleChangeValueForm}>
      <Space direction="vertical" size="middle" className="mt-6">
        <Typography.Text>
          1. Download and install any authenticator application in your mobile
          device (Google Authenticator, 2FAs, Duo Mobile,...etc)
        </Typography.Text>
        <div>
          <Typography.Text>
            2. Open your authenticator and scan this QR code.
          </Typography.Text>
          <div className="p-4">
            <img
              width={220}
              height={220}
              src={`data:image/png;base64,${props.key}`}
            />
          </div>
        </div>
        <div>
          <Typography.Text>
            3. Enter the OTP generated by the authenticator application.
          </Typography.Text>
          <Form.Item
            name="code"
            rules={[{ required: true, message: "OTP is required" }]}
            className="mb-0 mt-2 ml-3"
          >
            <InputOTP
              errorMessage={errorMessage}
              setErrorMessage={setErrorMessage}
            />
          </Form.Item>
        </div>
      </Space>
    </Form>
  );
};
export default memo(ExternalAuth);
